<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Redis学习笔记]]></title>
    <url>%2F2019%2F04%2F09%2FRedis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Redis学习笔记]]></content>
      <tags>
        <tag>redis, 内存数据库, 非关系型数据库, 学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker学习笔记]]></title>
    <url>%2F2019%2F04%2F08%2FDocker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[写在前面 每个开发人员都有自己习惯使用的开发环境，或Win或OS或linux，日常开打中大家都喜欢在自己擅长或者说习惯的开发环境中开发，然而一旦遇到需要跨平台部署的时候，总会在环境配置上面花费大量的时间(至少我是这样)。上个项目中unix环境部署到windows环境中，零零碎碎解决各种模块包编译等问题，花了大概一周左右的时间，以发际线肉眼可见上移的代价解决了这些坑爹问题(后面会给这些跨平台部署遇到的问题单独写一篇文章，用做记录)，终于决定找个一劳永逸的方案。 没错，就是Docker。接下来一段时间我会不断更新记录我的笔记，也希望这些能对各位读者能够有一些帮助，共勉。 参考资料：链接地址 初探Docker]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Hexo搭建博客]]></title>
    <url>%2F2019%2F04%2F01%2F%E5%85%B3%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[写在前面 很早之前就想搭建一个属于自己的博客，技术栈也从最初的javaweb变成了Nodejs，最终以Hexo落地了，别问为什么，问就各种坑以及本身的懒惰。只是随着时间的增长，觉得自己对于技术积累的不足越来越明显，为了不拖自己的后腿，决定把之前立下的Flag一根根的拔掉，就从个人博客开始，也希望自己在接下来的日子里养成技术发掘和个人总结的好习惯。（Flag+1 这篇文章主要是对于自己搭建博客项目的一个记录，会比较啰嗦，如果想直接看搭建的方法指令，可以直接跳到 精简说明查看快速搭建属于自己的Hexo个人博客。 前期准备 在使用Hexo搭建个人博客之前，先找到了网络上的一些教程贴和官方的实例看了一遍，作为一个快速搭建个人博客的工具来说，确实是及其的傻瓜式，在脑海中复盘了一遍，check了自己电脑的环境之后，开始动手 首先Hexo是通过nodejs以及npm模块管理工具快速生成一套博客模板的，所以在安装Hexo环境之前必须先安装配置nodejs以及npm环境。由于笔者事先已经安装好了Nodejs(v11.2.0)以及npm(v6.4.0)环境，准备直接执行 sudo npm install -g hexo-cli //笔者是unix系统 全局安装环境时由于权限问题需要添加sudo 然而，执行报错了。。。查看了一下报错日志，提示信息如下 Error: EACCES: permission denied,等等，这个报错好像是权限问题啊，可是我已经sudo了啊 姑且就当是权限不足了，权限不足前面的报错是gyp。node-gyp这个模块包是nodejs专门用来调用底层c++环境来编译文件用的，莫非是因为node-gyp安装的时候权限出问题了？ 下面还有 123gyp ERR! node -v v11.2.0gyp ERR! node-gyp -v v3.8.0gyp ERR! not ok 到这里，我有了两个猜想。nodejs版本过高，或者node-gyp的权限不足 先验证一下nodejs的版本问题。直接通过n模块切换至nodejs v7.6.0,正准备重新执行 sudo npm install -g hexo-cli,duang的一下，报错了。。。npm直接爆炸,似乎是因为低版本的nodejs无法支持高版本的npm运行(猜想，未验证)，此时切换为 nodejs v11.2.0也救不了我的npm，重装大法好。 干净利落的卸载掉了原有的nodejs环境以及npm环境然后从官网下载了11.2.0的安装包重新安装了环境，安装好之后，不信邪的我再次执行了 sudo npm install -g hexo-cli 这条指令，竟然一次成功了。。 Anyway，Hexo的环境是安装好了。。虽然没有找到原因，但是至少找到了一个解决方案(重装大法好！)，不过后来我在新机器上直接执行 sudo npm install -g hexo-cli 安装Hexo环境的时候，并没有遇到上述的问题，似乎是因为那台机子的nodejs环境是使用 Homebrew 安装的缘故，这个坑希望我下次可以再仔细探究一下(FLag+2); 配置博客环境 到目前为止，我们已经完成了Hexo-cli模块的安装，搭建个人博客项目的进度也过了一半；接下来我们选定一个目录用来存放我们博客项目，然后在命令行中进入当前目录，执行 1hexo init [文件名] \\[]的内容不填写的话直接在当前目录下生成你的博客项目，如果填写了内容的话回自动在当前目录下生成一个文件夹用于存放博客项目 不过为了方便我们后续部署到github上，建议博客项目存放文件夹的文件名最好是 github登录名.github.io，例如我的登录名是panyiliang,那么我这个项目存放文件夹的文件名是panyiliang.github.io. 执行过 hexo init [文件名]之后，我们进入已生成的项目目录，然后执行 npm install npm install执行完成之后，你可以直接执行 hexo server就可以直接通过默认的链接地址进行访问了。那么到这里我们的个人博客已经完成了80%了。 部署到github 在完成了本地版本的项目运行之后，你可以将你的博客项目部署到自己的云服务器上，也可以部署到免费的github上。此处作为穷逼的我，主要讲述一下如何部署到github上。 首先，你的电脑需要先安装好git环境(其实这个需要在一开始就安装好，只是我忘记说了)，我的电脑上安装的是Git工具GitKraken，还是挺好用的。既然你们都进行到这一步了，我就当做你们已经注册好了自己的github账号，并且对这个全球最大同性交友网站是有一定了解的。话不多说，可以直接使用github账号绑定登陆GitKraken，然后在File/init repo目录下选择github,如下图 ， 再上一份已经填好内容的 为了将这个博客项目部署到github上，name必须跟你上面创建好的文件名一致(即name.github.io这种形式)。 如果你并不想安装GitKraken，只想直接使用git部署到你的github上去，也可以直接参考这个方案。 到这里已经完成了项目的第一步部署，然后这个时候，我们打开项目根目录的_config.yml文件，关于这个配置文件的一些基础参数的讲解可以直接阅读官方文档。我这边只对一些用到的参数进行讲解。 12345678910111213141516171819202122232425262728293031323334353637# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Hexo //页面标题subtitle: //小标题description: //博客描述keywords: //博客的关键字、tagauthor: //网站作者language: zh-Hans //网站使用的语言 zh-Hans表示简体中文timezone: // 网站时区。默认使用您电脑的时区。# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: 网址root: //网站根目录 默认/permalink: // 文章的永久链接格式 默认:year/:month/:day/:title/permalink_defaults: // 永久链接中各部分的默认值# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next //Hexo选用的主题，笔者使用的是next主题，你也可以在官方主题商店(https://hexo.io/themes/)中选择你想要的主题，然后根据其github上或官方文档上的使用方法进行主题配置# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git //重头戏就在这里，最新版本的Hexo在这个deploy下，如果是部署到github上，需要在type后键入 git repository: https://github.com/githubname/githubname.github.io.git //此处填写的是上一步中你创建的github仓的链接地址 branch: master //使用hexo deploy指令的时候自动打包部署的代码存放分支，一半默认都是master，可以跟笔者一样在创建一个dev分支用于打草稿，最终线上生成的正式版本使用master分支archive_generator: per_page: 0 yearly: false monthly: false daily: false 在配置文件中修改配置之后，我们先执行 hexo generate指令生成静态文件，你也可以将这条指令简化为 hexo g; 成功生成静态文件后，我们再执行 hexo deploy或hexo d进行部署。 注意，这个时候可能会报错 如果报错信息为 ERROR Deployer not found: git,说明没有安装 hexo-deployer-git这个模块，此时你可以直接在根目录执行 npm install hexo-deployer-git --save解决这个报错。 解决报错之后再次执行 hexo d，Everything is all right。这个时候你可以直接通过 https://githubname.github.io 访问到你部署在线上的博客了。 配置自己的域名 如果你有属于自己的域名的话，你还可以给你的个人博客配置上你的域名，当然，你的域名需要先备案。 先在你项目的source目录下添加一个CNAME的文件，里面写入你的域名。注意，不需要带上http://。 当然你还需要安装一个插件npm install hexo-generator-cname --save，安装完成之后，在_config.yml文件最后加上 12Plugins:- hexo-generator-cname 安装配置这个插件主要是为了防止在执行hexo d的时候自动覆盖掉我们的CNAME文件导致无法通过我们的域名访问个人博客，保险起见，在我们配置好之后，重新执行一下hexo g &amp;&amp; hexo d将我们的博客部署到github上，这个时候你可以直接登陆github查看你的master分支下的source目录下，CNAME文件内容是否跟你预设的一致。然后打开repo的设置页面 确定Costom domian内容跟你CNAME文件内容保持一致 到这在github上的相关配置已经完成，接下来需要操作的就是域名解析配置。我的域名是通过阿里云平台购买的，这里就以阿里云控制台的域名解析配置作为例子 首先我们登陆阿里云，打开阿里云控制台，找到域名解析模块 添加这两条记录即可 PS:第一条解析记录中的IP地址可以可以根据你直接访问你已经部署好的 https://githubname.github.io 查看它的公网IP，将它替换进去，网上提供的几个github doc的公网IP我这边都无法使用，所以只好绑定到这个IP 精简说明一、环境要求 Nodejs npm git 二、安装运行指令 npm install -g hexo-cli hexo init [filename] npm install hexo server hexo generate hexo deploy 三、基础配置文件及安装模块 npm install hexo-deployer-git --save npm install hexo-generator-cname --save _config.yml基础配置12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788# Sitetitle: Blogsubtitle: Personal Blogdescription: Personal Blogkeywords: blog, 博客author: adminlanguage: zh-Hanstimezone:# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://gitauthname.github.ioroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &apos;&apos; per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: landscape# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/gitauthname/gitauthname.github.io.git branch: masterPlugins:- hexo-generator-cnamearchive_generator: per_page: 0 yearly: false monthly: false daily: false 写在最后 到这里就可以愉快的通过我们的域名访问到我们的个人博客了。如果在使用过程中遇到一些奇怪的问题，或者我文章中有不足的地方，欢迎提issue给我，不胜感激。]]></content>
  </entry>
</search>
